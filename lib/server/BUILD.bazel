load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = ["server.go"],
    importpath = "github.com/jrockway/jsso/lib/server",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_grpc_ecosystem_go_grpc_middleware//:go_default_library",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go_default_library",
        "@com_github_grpc_ecosystem_grpc_opentracing//go/otgrpc:go_default_library",
        "@com_github_jessevdk_go_flags//:go_default_library",
        "@com_github_opentracing_contrib_go_stdlib//nethttp:go_default_library",
        "@com_github_opentracing_opentracing_go//:go_default_library",
        "@com_github_prometheus_client_golang//prometheus:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promauto:go_default_library",
        "@com_github_prometheus_client_golang//prometheus/promhttp:go_default_library",
        "@com_github_uber_jaeger_client_go//config:go_default_library",
        "@com_github_uber_jaeger_client_go//log/zap:go_default_library",
        "@com_github_uber_jaeger_lib//metrics/prometheus:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//channelz/service:go_default_library",
        "@org_golang_google_grpc//health:go_default_library",
        "@org_golang_google_grpc//health/grpc_health_v1:go_default_library",
        "@org_golang_google_grpc//reflection:go_default_library",
        "@org_uber_go_zap//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["server_test.go"],
    embed = [":go_default_library"],
    race = "on",
    deps = [
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//health/grpc_health_v1:go_default_library",
    ],
)
